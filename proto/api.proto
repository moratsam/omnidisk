syntax = "proto3";
package api;

option go_package = "gen/api";

service Api{
	//..
	rpc SubscribeToEvents(SubscribeToEventsRequest) returns (stream Event);
	//..
}


//------------------<STRUCTS>
message Offer{
	string multiaddr = 1;
	uint32 capacity = 2; //in MB
	int64 timestamp = 3;
	string signature = 4;
}

message Contract{
	string owner_id = 1;
	uint32 size = 2; //in MB
	string cid = 3;
	int64 expires = 4;
	uint32 cardinality = 5;
/*
		ARCHIVED = 0;
		ARCHIVED_AND_ENCRYPTED = 1;
		ENCRYPTED_AND_INDEXED = 2;
		INDEXED = 3;
*/
	uint32 datatype = 6;

}
//------------------</STRUCTS>
//------------------<RPC>
//PING
message PingRequest{}
message PingResponse{}

//SET OFFER
message SetOfferRequest{
	uint32 capacity = 1; //in MB
}
message SetOfferResponse{
	bool done = 1;
}

//FIND CUSTODIANS
message FindCustodiansRequest{
	string filepath = 1; //absolute
	int64 expires = 2; 
	uint32 cardinality = 3;
	uint32 datatype = 4;
}
message FindCustodiansResponse{
	string ipfs_link = 1;
}

//RETRIEVE DATA
message RetrieveDataRequest{
	uint32 datatype = 1;
	string cid = 2;
	bool deindex = 3;
}
message RetrieveDataResponse{
	repeated string ipfs_links = 1;
}

//SUBSCRIBE TO EVENTS
message SubscribeToEventsRequest{}

//Events
message EvtOfferPub{ //event triggered on every node receiving an offer publication
	Offer offer = 1;
}
message EvtContractPub{ //event triggered on evey node receiving a contract publication
	string multiaddr = 1;
	repeated Contract contracts = 3;
}
message EvtStorageRequest{ //event triggered on storage-offering node after receiving req
	string multiaddr = 1;
	Contract contract = 2;
}
message EvtStorageResponse{ //event triggered on storage-seeking node after receiving resp
	string multiaddr = 1;
	bool done = 2;
}
message EvtRetrievalRequest{ //event triggered on custodian node after receiving req
	string multiaddr = 1;
}
message EvtRetrievalResponse{ //event triggered on owner node after receiving resp
	repeated string ipfs_links = 1;
}

message Event{
	enum Type{
		UNKNOWN = 0;
		OFFER_PUB = 1;
		CONTRACT_PUB = 2;
		STORAGE_REQUEST = 3;
		STORAGE_RESPONSE = 4;
		RETRIEVAL_REQUEST = 5;
		RETRIEVAL_RESPONSE = 6;
	}

	Type type = 1;
	EvtOfferPub offer_pub = 2;
	EvtContractPub contract_pub = 3;
	EvtStorageRequest storage_request = 4;
	EvtStorageResponse storage_response = 5;
	EvtRetrievalRequest retrieval_request = 6;
	EvtRetrievalResponse retrieval_response = 7;
}
//------------------</RPC>

